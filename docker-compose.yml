version: '3.3'

services:

  postgres:
    build: backend/postgres-dev/
    container_name: postgres
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./backend/db_data/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB_LIST: $POSTGRES_DATABASE_LIST

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8090:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  social:
    build: backend/social/
    container_name: social
    command: "sh ./docker-entrypoint.sh"
    restart: always
    ports:
      - $SOCIAL_PORT:$SOCIAL_PORT
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./backend/devkeys:/tmp/secrets
    environment:
      SOCIAL_PORT: $SOCIAL_PORT
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: $SOCIAL_DB

      KAFKA_HOST: $KAFKA_HOST
      KAFKA_USER_NAME: $KAFKA_USER_NAME
      KAFKA_PASSWORD: $KAFKA_PASSWORD
      KAFKA_SECURITY_PROTOCOL: $KAFKA_SECURITY_PROTOCOL

  # adding kafka 
  init-kafka:
    image: bitnami/kafka:latest
    entrypoint: /bin/bash
    depends_on:
      - kafka

    command: >
      -c "sleep 10 &&
            kafka-topics.sh --create --if-not-exists --topic "eventstream" --replication-factor=1 --partitions=1 --bootstrap-server kafka:9092"

  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka-local:/bitnami/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: Kafka Local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka

volumes:
  kafka-local:
    driver: local
